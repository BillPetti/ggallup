{
    "collab_server" : "",
    "contents" : "---\ntitle: \"ggallup Vignette\"\nauthor: \"Bill Petti\"\ndate: \"December 2016\"\noutput: html_document\n---\n\n# Introduction\n\nThis package contains a custom `ggplot2` theme that aligns with Gallup's general brand standards, as well as a custom palette that includes current colors that also align to Gallup's standards.\n\nTo see how they work, let's load some sample survey data and place each respondent into one of three groups:\n\n```{r, warning=FALSE, message=FALSE}\nsample_data <- read.csv(\"https://raw.githubusercontent.com/BillPetti/R-Crash-Course/master/survey_sample_data.csv\")\nhead(sample_data)\nset.seed(42)\nsample_data$group <- sample(1:3, 116, replace = TRUE)\nwith(sample_data, table(group))\n```\n\nNow, let's load `ggplot2` and the `ggallup` packages:\n\n```{r, warning=FALSE, message=FALSE}\nrequire(ggplot2)\nrequire(devtools)\ninstall_github(\"BillPetti/ggallup\", force = TRUE)\nrequire(ggallup)\n```\n\nHere is what a bar chart of average scores for Q1 per group looks like:  \n\n``````{r, warning=FALSE, message=FALSE}\nrequire(tidyverse)\n\nsample_data_mean <- sample_data %>%\n    gather(question, value, -resp, -group) %>%\n    group_by(question, group) %>%\n    summarise_each(funs(mean(., na.rm = TRUE)), mean = value) %>%\n    spread(question, mean)\n    \nq1_plot <- ggplot(sample_data_mean, aes(factor(group), Q1)) +\n    geom_bar(aes(fill = factor(group)), stat = \"identity\") +\n    ggtitle(\"\\nAverage Scores for Q1, by Group\\n\") +\n    xlab(\"\\nGroups\\n\") +\n    ylab(\"Q1\\n\") +\n    coord_cartesian(ylim = c(3,4.25))\n\nq1_plot\n```\n\nThe plot colors each data based on the number of PAs in a given player's season.\n\nIf we pass our saved plot object to the `ggallup` function it will reformat the plot accordingly:\n\n``````{r, warning=FALSE, message=FALSE}\nq1_plot_gallup <- ggallup(q1_plot)\n\nq1_plot_gallup\n```\n\nThe plot is still using `ggplot2`'s standard color scale. What if we wanted those colors to be compliant with Gallup standards? For that we can use the `gallup_palette` object. If we call the object we can see the hexidecimal codes for the colors:\n\n``````{r, warning=FALSE, message=FALSE}\ngallup_palette\n[1] \"#007934\" \"#61C250\" \"#C3E76F\" \"#A0A19E\" \"#7D7F7E\" \"#404545\"\n```\n\nThe palette includes our three greens as well as three greys. Let's color code each bar based on the group it represents using `scale_fill_manual` and specifying `gallup_palette` in the `values` argument:\n\n``````{r, warning=FALSE, message=FALSE}\nq1_plot_gallup_palette <- ggallup(q1_plot + \n    scale_fill_manual(values = gallup_palette, \"Group\"))\n    \nq1_plot_gallup_palette\n```\n\nHere is another example:\n\n```\nforecast <- data_frame(Date = c(\"2015-1\", \"2015-2\", \"2015-3\", \"2015-4\", \"2016-1\", \"2016-2\", \"2016-3\", \"2016-4\", \"2017-1\", \"2017-2\", \"2017-3\", \"2017-4\", \"2018-1\", \"2018-2\"), Sales = c(123657, 138786, 135784, 170495, 134050, 145450, 110090, 156504, 123580, 144678, 139087, 167098, 132456, 147564))\n\nforecast_melt <- forecast %>%\n  gather(key = key, value = 'Sales in Millions', -Date)\n\nforecast_melt <- forecast_melt %>%\n  mutate(group = c(\"Actuals\", \"Actuals\", \"Actuals\", \"Actuals\", \n                   \"Actuals\", \"Actuals\", \"Actuals\", \"Actuals\", \n                   \"Forecast\", \"Forecast\", \"Forecast\", \"Forecast\", \n                   \"Forecast\", \"Forecast\"))\n\nforecast_plot <- ggallup(forecast_melt %>%\n  ggplot(aes(x = Date, y = `Sales in Millions`, group = 1)) +\n  geom_point(aes(color = group)) +\n  geom_line(linetype = \"dashed\", color = \"#61C250\") +\n  geom_line(data = filter(forecast_melt, group == \"Actuals\"), aes(color = group)) +\n  xlab(\"\\nQuarter\") +\n  ylab(\"\\nSales in Millions\\n\") +\n  ggtitle(\"\\nExample: Actual & Forecasted Sales (MM)\\n\") +\n  scale_y_continuous(labels = scales::comma) +\n  scale_color_manual(values = gallup_palette, \"\"))\n  \nforecast_plot\n```\n",
    "created" : 1482185421225.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3150851054",
    "id" : "ECE76F35",
    "lastKnownWriteTime" : 1482245160,
    "last_content_update" : 1482245160383,
    "path" : "~/ggallup/vignette/ggallupVignette.md",
    "project_path" : "vignette/ggallupVignette.md",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "markdown"
}