axis.ticks = element_blank(),
panel.grid.major = element_blank()
)
}
theme_gallup_md <- function(base_size = 8, base_family = "Helvetica") {
theme_minimal(base_size = base_size, base_family = base_family) %+replace%
theme(
axis.text = element_text(face = "bold", size = 6, color = "black"),
axis.title = element_text(face = "bold", size = 10, color = "black"),
legend.title = element_text(face = "bold", size = 10, color = "black"),
legend.text = element_text(face = "bold", size = 10, color = "black"),
panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank()
)
}
use_data(theme_gallup, overwrite = TRUE)
use_data(theme_gallup_md, overwrite = TRUE)
document()
document()
sample_data <- read.csv("https://raw.githubusercontent.com/BillPetti/R-Crash-Course/master/FanGraphs_Leaderboard_Cum_WAR.csv")
sample_data_mets <- subset(x = sample_data, Team == "Mets")
unique(sample_data_mets$Season)
head(sample_data_mets)
str(sample_data_mets)
sample_data <- read.csv("https://raw.githubusercontent.com/BillPetti/R-Crash-Course/master/FanGraphs_Leaderboard_Cum_WAR.csv")
sample_data_mets <- subset(x = sample_data, Team == "Mets")
unique(sample_data_mets$Season)
head(sample_data_mets)
ggplot(sample_data_mets, aes(Off, Def)) +
geom_point(aes(color = PA, alpha = .65)) +
guides(alpha = FALSE)
ggplot(sample_data_mets, aes(PA, wOBA)) +
geom_point(aes(color = PA, alpha = .65)) +
guides(alpha = FALSE) +
theme_gallup()
require(ggplot2)
ggplot(sample_data_mets, aes(PA, wOBA)) +
geom_point(aes(color = PA, alpha = .65)) +
guides(alpha = FALSE) +
theme_gallup()
ggplot(sample_data_mets, aes(PA, wOBA)) +
geom_point(aes(color = PA, alpha = .65)) +
guides(alpha = FALSE) +
ggtitle("wOBA versus PA") +
xlab("\nPlate Appearances\n") +
ylab("Weighted On-base Average (wOBA)\n")
ggplot(sample_data_mets, aes(PA, wOBA)) +
geom_point(aes(color = PA, alpha = .65)) +
guides(alpha = FALSE) +
ggtitle("wOBA versus PA") +
xlab("\nPlate Appearances\n") +
ylab("Weighted On-base Average (wOBA)\n") +
theme_gallup()
ggplot(sample_data_mets, aes(PA, wOBA)) +
geom_point(aes(color = PA, alpha = .65)) +
guides(alpha = FALSE) +
ggtitle("\nwOBA versus PA\n") +
xlab("\nPlate Appearances\n") +
ylab("Weighted On-base Average (wOBA)\n") +
theme_gallup()
ggplot(sample_data_mets, aes(PA, wOBA)) +
geom_point(aes(color = PA, alpha = .65)) +
guides(alpha = FALSE) +
ggtitle("\nwOBA versus PA\n") +
xlab("\nPlate Appearances\n") +
ylab("Weighted On-base Average (wOBA)\n") +
theme_gallup() +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data_mets, aes(PA, wOBA)) +
geom_point(aes(color = PA, alpha = .65)) +
guides(alpha = FALSE) +
ggtitle("\nwOBA versus PA\n") +
xlab("\nPlate Appearances\n") +
ylab("Weighted On-base Average (wOBA)\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
gallup_palette
test <- factor(c(1,2,3,4,5,6))
sample_data <- read.csv("https://raw.githubusercontent.com/BillPetti/R-Crash-Course/master/survey_sample_data.csv")
head(sample_data)
sample_data <- read.csv("https://raw.githubusercontent.com/BillPetti/R-Crash-Course/master/survey_sample_data.csv")
head(sample_data)
set.seed(42)
survey_data$group <- sample(1:3, 116, replace = TRUE)
with(survey_data, table(group))
sample_data <- read.csv("https://raw.githubusercontent.com/BillPetti/R-Crash-Course/master/survey_sample_data.csv")
head(sample_data)
set.seed(42)
sample_data$group <- sample(1:3, 116, replace = TRUE)
with(sample_data, table(group))
ggplot(sample_data_mets, aes(Q1, Q2)) +
geom_point(alpha = .65) +
guides(alpha = FALSE) +
ggtitle("\Q1 versus Q2\n") +
xlab("\nQ1\n") +
ylab("Q2\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data_mets, aes(Q1, Q2)) +
geom_point(alpha = .65) +
guides(alpha = FALSE) +
ggtitle("\nQ1 versus Q2\n") +
xlab("\nQ1\n") +
ylab("Q2\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(Q1, Q2)) +
geom_point(alpha = .65) +
guides(alpha = FALSE) +
ggtitle("\nQ1 versus Q2\n") +
xlab("\nQ1\n") +
ylab("Q2\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(group, mean(Q1))) +
geom_bar(aes(color = group), state = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(group, mean(Q1))) +
geom_bar(aes(color = group), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(factor(group), mean(Q1))) +
geom_bar(aes(color = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(factor(group), Q1)) +
geom_bar(aes(color = factor(group)), stat = "identity") +
stat_summary(fun.y = "mean") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
stat_summary(fun.y = "mean") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(Q1) +
geom_bar(aes(fill = factor(group))) +
stat_summary(fun.y = "mean") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(group) +
geom_bar(aes(fill = factor(group))) +
stat_summary(aeas(y = Q1), fun.y = "mean", geom = "bar") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(group) +
geom_bar(aes(fill = factor(group))) +
stat_summary(aes(y = Q1), fun.y = "mean", geom = "bar") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(group)) +
geom_bar(aes(fill = factor(group))) +
stat_summary(aes(y = Q1), fun.y = "mean", geom = "bar") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(group)) +
geom_bar() +
stat_summary(aes(y = Q1), fun.y = "mean", geom = "bar") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
require(tidyverse)
sample_data_meam <- sample_data %>%
gather(key, value, -resp, -group) %>%
group_by(key) %>%
summarise_each(mean = mean())
sample_data_meam <- sample_data %>%
gather(key, value, -resp, -group) %>%
group_by(key) %>%
summarise_each(funs = round(mean, na.rm = TRUE))
sample_data_meam <- sample_data %>%
gather(key, value, -resp, -group) %>%
group_by(key) %>%
summarise_each(funs = round(mean(na.rm = TRUE),2))
sample_data_meam <- sample_data %>%
gather(key, value, -resp, -group) %>%
group_by(key) %>%
summarise_each(funs = round(mean(., na.rm = TRUE),2))
sample_data_meam <- sample_data %>%
gather(key, value, -resp, -group) %>%
group_by(key) %>%
summarise_each(funs = mean(.))
sample_data_meam <- sample_data %>%
gather(key, value, -resp, -group) %>%
group_by(key) %>%
summarise_each(funs(mean), mean = mean)
sample_data_meam <- sample_data %>%
gather(question, value, -resp, -group) %>%
group_by(question)
View(sample_data_meam)
sample_data_mean <- sample_data %>%
gather(question, value, -resp, -group) %>%
group_by(question)
rm(sample_data_meam)
sample_data_mean <- sample_data %>%
gather(question, value, -resp, -group) %>%
group_by(question) %>%
summarise_each(funs(mean), mean = value)
View(sample_data_mean)
sample_data_mean <- sample_data %>%
gather(question, value, -resp, -group) %>%
group_by(question) %>%
summarise_each(funs(mean(., na.rm = TRUE)), mean = value)
View(sample_data_mean)
sample_data_mean <- sample_data %>%
gather(question, value, -resp, -group) %>%
group_by(question, group) %>%
summarise_each(funs(mean(., na.rm = TRUE)), mean = value)
View(sample_data_mean)
ggplot(sample_data, aes(group, Q1)) +
geom_bar(aes(fill = group), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold")) +
theme_gallup() +
ggplot(sample_data, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold")) +
theme_gallup()
ggplot(sample_data, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme(plot.title = element_text(size = 16, face = "bold")) +
theme_gallup()
ggplot(sample_data, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme_gallup() +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n")
ggplot(sample_data, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme_gallup() +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data_means, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme_gallup() +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme_gallup() +
theme(plot.title = element_text(size = 16, face = "bold"))
`
View(sample_data_mean)
sample_data_mean <- sample_data %>%
gather(question, value, -resp, -group) %>%
group_by(question, group) %>%
summarise_each(funs(mean(., na.rm = TRUE)), mean = value) %>%
spread()
View(sample_data_mean)
View(sample_data_mean)
sample_data_mean <- sample_data %>%
gather(question, value, -resp, -group) %>%
group_by(question, group) %>%
summarise_each(funs(mean(., na.rm = TRUE)), mean = value) %>%
spread(question, mean, -group)
sample_data_mean <- sample_data %>%
gather(question, value, -resp, -group) %>%
group_by(question, group) %>%
summarise_each(funs(mean(., na.rm = TRUE)), mean = value) %>%
spread(question, mean)
View(sample_data_mean)
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n")
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
theme_gallup() +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
ylim(2,5)
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n")
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
scale_y_continuous(limits = c(2,5))
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
scale_y_continuous(limits = c(2,5), oob = rescale_none)
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
scale_y_continuous(limits = c(2,5))
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
scale_y_continuous(limits = c(0,5))
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
coord_cartesian(ylim = c(2,5))
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
coord_cartesian(ylim = c(3,5))
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
coord_cartesian(ylim = c(3,4.5))
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
coord_cartesian(ylim = c(3.5,4.5))
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
coord_cartesian(ylim = c(3,4.25))
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
coord_cartesian(ylim = c(3,4.25)) +
theme_gallup() +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
coord_cartesian(ylim = c(3,4.25)) +
scale_fill_manual(values = gallup_palette, "Group") +
theme_gallup() +
theme(plot.title = element_text(size = 16, face = "bold"))
theme_gallup()
theme_gallup
theme_gallup <- function(base_size = 12, base_family = "Helvetica") {
theme_minimal(base_size = base_size, base_family = base_family) %+replace%
theme(
axis.text = element_text(face = "bold", size = 12, color = "#555656"),
axis.title = element_text(face = "bold", size = 15, color = "#555656"),
legend.title = element_text(face = "bold", size = 14, color = "#555656"),
legend.text = element_text(face = "bold", size = 14, color = "#555656"),
panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank()
)
}
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
coord_cartesian(ylim = c(3,4.25)) +
scale_fill_manual(values = gallup_palette, "Group") +
theme_gallup() +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
coord_cartesian(ylim = c(3,4.25)) +
scale_fill_manual(values = gallup_palette, "Group") +
theme_gallup() +
theme(plot.title = element_text(size = 16, face = "bold", color = "#555656"))
theme_gallup <- function(base_size = 12, base_family = "Helvetica") {
theme_minimal(base_size = base_size, base_family = base_family) %+replace%
theme(
plot.title = element_text(color = "#555656"),
axis.text = element_text(face = "bold", size = 12, color = "#555656"),
axis.title = element_text(face = "bold", size = 15, color = "#555656"),
legend.title = element_text(face = "bold", size = 14, color = "#555656"),
legend.text = element_text(face = "bold", size = 14, color = "#555656"),
panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank()
)
}
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
coord_cartesian(ylim = c(3,4.25)) +
scale_fill_manual(values = gallup_palette, "Group") +
theme_gallup() +
theme(plot.title = element_text(size = 16, face = "bold"))
ggplot
theme
theme()
install_github("BillPetti/ggallup")
require(ggallup)
install_github("BillPetti/ggallup", force = TRUE)
require(ggallup)
ggplot(sample_data_mean, aes(factor(group), Q1)) +
geom_bar(aes(fill = factor(group)), stat = "identity") +
ggtitle("\nAverage Scores for Q1, by Group\n") +
xlab("\nGroups\n") +
ylab("Q1\n") +
coord_cartesian(ylim = c(3,4.25)) +
scale_fill_manual(values = gallup_palette, "Group") +
theme_gallup() +
theme(plot.title = element_text(size = 16, face = "bold"))
rm(theme_gallup())
rm(theme_gallup
)
require(devtools)
install_github("BillPetti/ggallup", force = TRUE)
require(ggallup)
require(ggplot2)
require(devtools)
install_github("BillPetti/ggallup", force = TRUE)
require(ggallup)
rm(list = ls())
sample_data <- read.csv("https://raw.githubusercontent.com/BillPetti/R-Crash-Course/master/survey_sample_data.csv")
head(sample_data)
set.seed(42)
sample_data$group <- sample(1:3, 116, replace = TRUE)
with(sample_data, table(group))
require(ggplot2)
require(devtools)
install_github("BillPetti/ggallup", force = TRUE)
require(ggallup)
detach(packages("ggallup"))
detach(name = "ggallup")
?detach
detach(package:ggallup)
install_github("BillPetti/ggallup", force = TRUE)
require(ggallup)
detach(package:ggallup)
remove.packages("ggallup")
install_github("BillPetti/ggallup", force = TRUE)
library("ggallup", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
theme_galluop
theme_gallup
remove.packages("ggallup")
